<%- include('adminHeader') %>

  <div class="container">

    <h3 class="mt-5" style="letter-spacing: 1.5px;">PRODUCTS</h3>

    <div class="card-body p-0 text-end">
      <button class="btn btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#myModalAdd">ADD</button>
    </div>

    <p style="color: rgba(255, 0, 0, 0.714);">
      <%= errMessage %>
    </p>

    <!-- Modal -->
    <div class="col-lg-12">
      <div class="card mb-0">
        <div class="card-header"></div>
        <div class="card me-5 mt-3">
          <div class="table-responsive">
            <table class="table mb-0 table-striped table-hover">
              <thead>
                <tr>
                  <th>No.</th>
                  <th>Name</th>
                  <th>Price</th>
                  <th>Size</th>
                  <th>Images</th>
                  <th>Category</th>
                  <th>Collections</th>
                  <th>Description</th>
                  <th>Stock</th>
                  <th>Status</th>
                  <th>Updation</th>
                </tr>
              </thead>

              <tbody>
                <% product.forEach((data, index)=> { %>
                  <% if (!data.isAvailable) { %>
                    <tr style="background-color: rgba(255, 0, 0, 0.419);">
                      <% } else { %>
                    <tr>
                      <% } %>
                        <th scope="row">
                          <%= index+1 %>
                        </th>
                        <td>
                          <%= data.productName %>
                        </td>
                        <td>$ <%= data.price %>
                        </td>
                        <td>
                          <%= data.size %>
                        </td>
                        <td><img src="/assets/uploads/<%= data.image[data.image.length-1] %>" height="50px" width="50px"
                            alt=""></td>

                        <td>
                          <%= data.category ? data.category.category : 'No Category' %>
                        </td>
                        <td>
                          <%= data.collection %>
                        </td>
                        <td>
                          <div class="description-container">
                            <div class="truncated-description"></div>
                            <span class="full-description" style="display: none;">
                              <%= data.description %>
                            </span>
                            <button class="read-more-btn">Read <i class="fa-solid fa-angle-down"></i></button>
                            <div class="row justify-content-end">
                              <button class="read-less-btn" style="display: none;">Hide<i
                                  class="fa-solid fa-angle-up ms-2"></i></button>
                            </div>
                          </div>
                        </td>



                        <td>
                          <%= data.stock %>
                        </td>
                        <% if (data.isAvailable) { %>
                          <td>Available</td>
                          <% } else { %>
                            <td>Unavailable</td>
                            <% } %>

                              <td>
                                <a href="" data-bs-toggle="modal" data-bs-target="#myModalEdit<%= index %>">
                                  <i class="fa-solid fa-pen-to-square"></i>
                                </a>
                                <% if (data.isAvailable) { %>
                                  <a href="/admin_unlist_product?id=<%= data._id %>"><i
                                      class="fa-regular fa-circle-xmark ms-3"></i></a>
                                  <% } else { %>
                                    <a href="/admin_list_product?id=<%= data._id %>"><i
                                        class="fa-solid fa-check ms-3"></i></a>
                                    <% } %>
                              </td>
                    </tr>

                    <!-- Modal for Editing Product -->
                    <!-- Modal -->
                    <div class="modal fade text-start" id="myModalEdit<%= index %>" tabindex="-1"
                      aria-labelledby="myModalLabel" aria-hidden="true">
                      <div class="modal-dialog">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="myModalLabel">Edit Products</h5>
                            <button class="btn-close btn-close-white" type="button" data-bs-dismiss="modal"
                              aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                            <p></p>
                            <form action="/admin_edit_product?productId=<%= data._id %>" id="editProductForm<%= index %>"
                              method="post" enctype="multipart/form-data" multiple
                              accept="image/png, image/gif, image/jpeg, image/jpg ,image/webp">
                              <div class="mb-3">
                                <label class="form-label" for="modalInputEmail1">Product Name</label>
                                <input class="form-control" id="productName<%= index %>" type="text" name="productName"
                                  value="<%= data.productName %>" onblur="editValidateProductName('<%= index %>')">
                                <p style="color: red;" id="error-name<%= index %>"></p>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputEmail1">Price</label>
                                <input class="form-control" id="price<%= index %>" type="number" name="price"
                                  value="<%= data.price %>" onblur="editValidatePrice('<%= index %>')">
                                <p style="color: red;" id="error-price<%= index %>"></p>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputSize<%= index %>">Size</label>
                                <select class="form-select" id="modalInputSize<%= index %>" name="size">
                                  <option value="M" <%=data.size==='M' ? 'selected' : '' %>>M</option>
                                  <option value="S" <%=data.size==='S' ? 'selected' : '' %>>S</option>
                                  <option value="L" <%=data.size==='L' ? 'selected' : '' %>>L</option>
                                </select>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputCategory<%= index %>">Categories</label>
                                <select class="form-select" id="modalInputCategory<%= index %>" name="category">
                                  <% categories.forEach(category=> { %>
                                    <option value="<%= category._id %>" <%=data && data.category &&
                                      data.category._id.toString()===category._id.toString() ? 'selected' : '' %>><%=
                                        category.category %>
                                    </option>
                                    <% }); %>
                                </select>
                              </div>


                              <div class="mb-3">
                                <label class="form-label" for="modalInputCollection<%= index %>">Collections</label>
                                <select class="form-select" id="modalInputCollection<%= index %>" name="collection">
                                  <option value="Men" <%=data.collection==='Men' ? 'selected' : '' %>>Men</option>
                                  <option value="Women" <%=data.collection==='Women' ? 'selected' : '' %>>Women</option>
                                </select>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputDescription<%= index %>">Description</label>
                                <input class="form-control" id="description<%= index %>" type="text"
                                  value="<%= data.description %>" name="description"
                                  onblur="editValidateDescription('<%= index %>')">
                                <p style="color: red;" id="error-description<%= index %>"></p>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputEmail1">Stock </label>
                                <input class="form-control" id="stock<%= index %>" type="number"
                                  value="<%= data.stock %>" name="stock" onblur="editValidateStock('<%= index %>')">
                                <p style="color: red;" id="error-stock<%= index %>"></p>
                              </div>

                              <div class="mb-3">
                                <label class="form-label" for="modalInputEmail1">Images</label>
                                <p>Current Choosed Images</p>
                                <% data.image.forEach((image, imageIndex) => { %>
                                  <div class="d-flex align-items-center mb-2">
                                    <img src="/assets/uploads/<%= image %>" height="60px" width="60px">
                                    <button class="btn btn-danger btn-sm ms-2" type="button" onclick="deleteImage('<%= data._id %>', '<%= image %>', '<%= imageIndex %>')">Delete</button>
                                  </div>
                                <% }); %>
                                <div id="imagePreviews" class="mt-2"></div>
                                <p style="color: red;">Can only add up to 12 images *</p>
                                <input class="form-control" id="fileInput" type="file" name="images" multiple onchange="previewImages()">
                              </div>


                                  <div class="modal-footer">
                                    <button class="btn btn-secondary" type="button"
                                      data-bs-dismiss="modal">Close</button>
                                    <button class="btn btn-primary" type="submit">Save </button>
                                  </div>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>

    <script>


 // Function to preview newly selected images
 function previewImages() {
    const fileInput = document.getElementById('fileInput');
    const imagePreviews = document.getElementById('imagePreviews');
    imagePreviews.innerHTML = ''; // Clear previous previews

    const files = fileInput.files;
    for (const file of files) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const imgElement = document.createElement('img');
        imgElement.src = e.target.result;
        imgElement.height = 60;
        imgElement.width = 60;
        imagePreviews.appendChild(imgElement);
      };
      reader.readAsDataURL(file);
    }
  }


//-------------------editing the image 
async function deleteImage(productId, imageName, imageIndex) {
    try {
      const response = await fetch(`/delete_product_image?id=${productId}&image=${imageName}`, {
        method: 'DELETE'
      });
      if (response.ok) {
        // Remove the deleted image from the UI
        const imageDiv = document.querySelector(`#image_${imageIndex}`);
        if (imageDiv) {
          imageDiv.remove();
        }
        toastr.error('Image deleted successfully','Success')
        setTimeout(() => {
          window.location.href = '/admin_products'
        }, 1000);
      } else {
        console.error('Failed to delete image');
        toastr.error('Failed to delete image','Sorry')
      }
    } catch (error) {
      console.error('Error deleting image:', error);
    }
  }


      function editValidateProductName(index) {
        const name = document.getElementById('productName' + index).value
        const nameError = document.getElementById('error-name' + index)
        if (name.trim().length <= 2) {
          nameError.innerHTML = 'Enter Product Name';
          return false
        } else {
          nameError.innerHTML = '';
          toastr.success('Valid Product Name', 'Done')
          return true
        }
      }

      function editValidatePrice(index) {
        const price = document.getElementById('price' + index).value
        const error = document.getElementById('error-price' + index)
        if (price <= 0 || NaN) {
          error.innerHTML = 'Enter the price'
          return false
        } else {
          error.innerHTML = ''
          toastr.success('Valid Price', 'Done');
          return true
        }
      }

      function editValidateDescription(index) {
        const description = document.getElementById('description' + index).value
        const error = document.getElementById('error-description' + index)
        if (description.trim().length <= 0) {
          error.innerHTML = 'Enter descitption'
          return false
        }
        else if (description.trim().length <= 10) {
          error.innerHTML = 'Description must be greater than 10 words'
          return false
        } else {
          error.innerHTML = ''
          toastr.success('Valid Description', 'Done');
          return true
        }
      }

      function editValidateStock(index) {
        const stock = document.getElementById('stock' + index).value
        const error = document.getElementById('error-stock' + index)
        if (stock <= 0 || NaN) {
          error.innerHTML = 'Enter the stock'
          return false
        } else {
          error.innerHTML = ''
          toastr.success('Valid Stock', 'Done')
          return true
        }
      }

      '<% product.forEach((data, index)=>{ %>'
      document.getElementById('editProductForm<%= index %>').addEventListener('submit', function (event) {
        console.log('Form starting to submitting ')
        const isaddValidatePrice1 = editValidatePrice('<%= index %>')
        const isaddValidateStock1 = editValidateStock('<%= index %>')
        const isaddValidateDescription1 = editValidateDescription('<%= index %>')
        const isaddValidateProductName1 = editValidateProductName('<%= index %>')
        if (!(isaddValidateDescription1 && isaddValidatePrice1 && isaddValidateProductName1 && isaddValidateStock1)) {
          console.log('yeah its entered to prevent default')
          event.preventDefault()
        }
      });
      '<% }) %>'

    </script>




    <!-- Modal for Adding Product -->
    <div class="modal fade text-start" id="myModalAdd" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="myModalLabel">Add Products</h5>
            <button class="btn-close btn-close-white" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form action="/admin_add_product" id="addProductForm" method="post" enctype="multipart/form-data">
              <div class="mb-3">
                <label class="form-label">Product Name</label>
                <input class="form-control" type="text" name="productName" id="addProductName"
                  onblur="addValidateProductName()">
                <p style="color: red;" id="error-name"></p>
              </div>

              <div class="mb-3">
                <label class="form-label">Price</label>
                <input class="form-control" id="addPrice" type="number" name="price" onblur="addValidatePrice()">
                <p style="color: red;" id="error-price"></p>
              </div>

              <div class="mb-3">
                <label class="form-label">Size</label>
                <select class="form-select" id="categories" name="size">
                  <option value="M">M</option>
                  <option value="S">S</option>
                  <option value="L">L</option>
                </select>
              </div>

              <div class="mb-3">
                <label class="form-label">Categories</label>
                <select class="form-select" id="categories" name="category">
                  <% categories.forEach(category=> { %>
                    <option value="<%= category._id %>">
                      <%= category.category %>
                    </option>
                    <% }); %>
                </select>
              </div>

              <div class="mb-3">
                <label class="form-label">Collections</label>
                <select class="form-select" id="categories" name="collection">
                  <option value="Men">Men</option>
                  <option value="Women">Women</option>

                </select>
              </div>

              <div class="mb-3">
                <label class="form-label">Description</label>
                <input class="form-control" id="addDescription" type="" name="description"
                  onblur="addValidateDescription()">
                <p style="color: red;" id="error-description"></p>
              </div>

              <div class="mb-3">
                <label class="form-label">Stock </label>
                <input class="form-control" id="addStock" type="number" name="stock" onblur="addValidateStock()">
                <p style="color: red;" id="error-stock"></p>
              </div>

              <div class="mb-3">
                <label class="form-label">Images</label>
                <p style="color: red;">Can only add up to 12 images *</p>

                <div id="previewContainer" class="row mb-4"></div>
                <input class="form-control" id="fileInput" type="file" name="images" multiple required>
              </div>

              <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                <button class="btn btn-primary" id="addProductBtn" type="submit">Add</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- End Modal for Adding Category -->
    <script src="/javascripts/validation.js"></script>
    <script>
      document.getElementById('addProductForm').addEventListener('submit', function (event) {
        const isaddValidatePrice = addValidatePrice()
        const isaddValidateStock = addValidateStock()
        const isaddValidateDescription = addValidateDescription()
        const isaddValidateProductName = addValidateProductName()
        if (!(isaddValidateDescription && isaddValidatePrice && isaddValidateProductName && isaddValidateStock)) {
          event.preventDefault()
        }
      })

    </script>


    <nav aria-label="Page navigation">
      <ul class="pagination">
        <% if (currentPage> 1) { %>
          <li class="page-item"><a class="page-link" href="/admin_products?page=<%= currentPage - 1 %>">Previous</a>
          </li>
          <% } %>
            <% for (let i=1; i <=totalPages; i++) { %>
              <li class="page-item <%= currentPage === i ? 'active' : '' %>"><a class="page-link"
                  href="/admin_products?page=<%= i %>">
                  <%= i %>
                </a></li>
              <% } %>
                <% if (currentPage < totalPages) { %>
                  <li class="page-item"><a class="page-link" href="/admin_products?page=<%= currentPage + 1 %>">Next</a>
                  </li>
                  <% } %>
      </ul>
    </nav>

  </div>

  <script>

//------------------------- edit image preview 


//add product image preivew container

document.getElementById('fileInput').addEventListener('change', function (event) {
  const previewContainer = document.getElementById('previewContainer');
  const files = event.target.files;

  previewContainer.innerHTML = ''; // Clear previous previews

  for (const file of files) {
    const reader = new FileReader();

    reader.onload = function (e) {
      const imgElement = document.createElement('img');
      imgElement.src = e.target.result;
      imgElement.style.maxWidth = '110px';
      imgElement.style.maxHeight = '110px';
      imgElement.style.marginTop = '10px';
      
      const removeBtn = document.createElement('button');
      removeBtn.textContent = 'Remove';
      removeBtn.classList.add('btn', 'btn-danger', 'btn-sm', 'mx-2');
      removeBtn.addEventListener('click', function() {
        // Remove the corresponding image preview
        const previewDiv = removeBtn.parentElement;
        previewContainer.removeChild(previewDiv);
        // Remove the corresponding file from the file input's files list
        const removedFileIndex = Array.from(previewContainer.children).indexOf(previewDiv);
        const updatedFiles = Array.from(files);
        updatedFiles.splice(removedFileIndex, 1);
        // Update the file input's files list
        event.target.files = new FileList(updatedFiles);
      });

      const previewDiv = document.createElement('div');
      previewDiv.appendChild(imgElement);
      previewDiv.appendChild(removeBtn);
      previewContainer.style.display = 'flex';
      previewContainer.appendChild(previewDiv);
    };

    reader.readAsDataURL(file);
  }
});

    function truncateDescription(text, limit) {
      return text.length > limit ? text.slice(0, limit) + '...' : text;
    }

    document.addEventListener('DOMContentLoaded', function () {
      const descriptionContainers = document.querySelectorAll('.description-container');

      descriptionContainers.forEach(container => {
        const truncatedDescription = container.querySelector('.truncated-description');
        const fullDescription = container.querySelector('.full-description');
        const readMoreBtn = container.querySelector('.read-more-btn');
        const readLessBtn = container.querySelector('.read-less-btn');

        readMoreBtn.addEventListener('click', function () {
          truncatedDescription.style.display = 'none';
          fullDescription.style.display = 'inline';
          readMoreBtn.style.display = 'none';
          readLessBtn.style.display = 'inline';
        });

        readLessBtn.addEventListener('click', function () {
          truncatedDescription.style.display = 'inline';
          fullDescription.style.display = 'none';
          readMoreBtn.style.display = 'inline';
          readLessBtn.style.display = 'none';
        });
      });
    });

    // Define the truncateDescription function
    function truncateDescription(text, limit) {
      return text.length > limit ? text.slice(0, limit) + '...' : text;
    }


  </script>

  <%- include('adminFooter') %>